---
import {
  FaceIcon,
  ImageIcon,
  SunIcon,
  HamburgerMenuIcon,
} from "@radix-ui/react-icons";
---

<aside
  class="sidebar fixed inset-y-0 left-0 z-30 grid grid-rows-[auto_1fr]
         bg-[var(--color-panel)] text-[var(--gray-12)] border-r border-[var(--gray-a5)] shadow-lg
         transition-all duration-200 ease-in-out transform -translate-x-full md:translate-x-0 md:w-[72px]"
  data-collapsed
>
  <button
    class="toggle hidden md:inline-flex items-center gap-2 text-[var(--gray-12)] p-3 rounded-lg hover:bg-[var(--gray-a3)]"
    aria-label="Toggle sidebar"
    aria-expanded="false"
  >
    <HamburgerMenuIcon width="22" height="22" />
  </button>

  <nav class="flex flex-col p-2 gap-1 overflow-y-auto">
    <a
      class="grid grid-cols-[28px_1fr] items-center gap-2.5 px-3 py-2 rounded-md text-inherit no-underline hover:bg-[var(--gray-a3)]"
      href="#"
    >
      <span class="icon"><FaceIcon width="22" height="22" /></span>
      <span class="label text-sm truncate text-[var(--gray-12)] md:hidden"
        >Profile</span
      >
    </a>
    <a
      class="grid grid-cols-[28px_1fr] items-center gap-2.5 px-3 py-2 rounded-md text-inherit no-underline hover:bg-[var(--gray-a3)]"
      href="#"
    >
      <span class="icon"><SunIcon width="22" height="22" /></span>
      <span class="label text-sm truncate text-[var(--gray-12)] md:hidden"
        >Theme</span
      >
    </a>
    <a
      class="grid grid-cols-[28px_1fr] items-center gap-2.5 px-3 py-2 rounded-md text-inherit no-underline hover:bg-[var(--gray-a3)]"
      href="#"
    >
      <span class="icon"><ImageIcon width="22" height="22" /></span>
      <span class="label text-sm truncate text-[var(--gray-12)] md:hidden"
        >Media</span
      >
    </a>
  </nav>
</aside>

<!-- Floating mobile toggle lives outside the aside so it's reachable when sidebar is offscreen -->
<button
  class="mobile-fab fixed top-3 left-3 z-40 bg-[var(--color-panel)] border border-[var(--gray-a5)] shadow-lg rounded-lg p-3 md:hidden"
  aria-label="Open sidebar"
  aria-expanded="false"
>
  <HamburgerMenuIcon width="22" height="22" />
</button>

<script>
  // Toggle sidebar state and update a global html class for layout shifts on desktop.
  const sidebar = document.querySelector(".sidebar");
  const desktopToggle = document.querySelector(".sidebar .toggle");
  const mobileFab = document.querySelector(".mobile-fab");
  const main = document.querySelector("main");

  let collapsed = true; // start collapsed
  const mql = window.matchMedia("(min-width: 769px)");

  function applyState() {
    if (!sidebar) return;
    const labels = Array.from(sidebar.querySelectorAll(".label"));

    if (mql.matches) {
      // Desktop: visible sidebar pushes content
      sidebar.classList.remove("-translate-x-full");
      if (collapsed) {
        sidebar.classList.remove("md:w-[280px]");
        sidebar.classList.add("md:w-[72px]");
        labels.forEach((el) => el.classList.add("md:hidden"));
        main?.classList.remove("md:ml-[280px]");
        main?.classList.add("md:ml-[72px]");
        desktopToggle?.setAttribute("aria-expanded", "false");
      } else {
        sidebar.classList.remove("md:w-[72px]");
        sidebar.classList.add("md:w-[280px]");
        labels.forEach((el) => el.classList.remove("md:hidden"));
        main?.classList.remove("md:ml-[72px]");
        main?.classList.add("md:ml-[280px]");
        desktopToggle?.setAttribute("aria-expanded", "true");
      }
      mobileFab?.setAttribute("aria-expanded", collapsed ? "false" : "true");
    } else {
      // Mobile: slide-over overlay, content not shifted
      main?.classList.remove("md:ml-[72px]", "md:ml-[280px]");
      sidebar.classList.remove("md:w-[72px]", "md:w-[280px]");
      if (collapsed) {
        sidebar.classList.add("-translate-x-full");
        sidebar.classList.remove("translate-x-0", "w-[80vw]", "max-w-[320px]");
        mobileFab?.setAttribute("aria-expanded", "false");
      } else {
        sidebar.classList.add("translate-x-0", "w-[80vw]", "max-w-[320px]");
        sidebar.classList.remove("-translate-x-full");
        mobileFab?.setAttribute("aria-expanded", "true");
      }
      labels.forEach((el) => el.classList.remove("md:hidden"));
    }
  }

  function toggle() {
    collapsed = !collapsed;
    applyState();
  }

  // Initialize
  applyState();
  mql.addEventListener("change", applyState);
  desktopToggle?.addEventListener("click", toggle);
  mobileFab?.addEventListener("click", toggle);
</script>
